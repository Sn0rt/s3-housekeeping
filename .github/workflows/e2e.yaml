name: E2E Tests

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:

jobs:
  e2e-test:
    runs-on: ubuntu-latest
    timeout-minutes: 30

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup Helm
      uses: azure/setup-helm@v3
      with:
        version: 'v3.12.0'

    - name: Setup kubectl
      uses: azure/setup-kubectl@v3
      with:
        version: 'v1.28.0'

    - name: Start minikube
      uses: medyagh/setup-minikube@master
      with:
        minikube-version: 'v1.32.0'
        kubernetes-version: 'v1.28.0'
        driver: docker
        start-args: '--memory=4096 --cpus=2'

    - name: Verify minikube
      run: |
        kubectl cluster-info
        kubectl get nodes

    - name: Deploy MinIO
      run: |
        # Create namespace
        kubectl create namespace minio || true

        # Deploy MinIO using direct YAML
        kubectl apply -f chart/tests/e2e/minio.yaml -n minio

        # Wait for deployment to be ready
        kubectl wait --for=condition=available deployment/minio -n minio --timeout=300s

    - name: Wait for MinIO to be ready
      run: |
        kubectl wait --for=condition=ready pod -l app=minio -n minio --timeout=300s
        kubectl get pods -n minio

    - name: Verify MinIO access
      run: |
        # Get MinIO NodePort
        MINIO_PORT=$(kubectl get svc minio -n minio -o jsonpath='{.spec.ports[0].nodePort}')
        MINIO_URL="http://localhost:${MINIO_PORT}"
        echo "MinIO URL: ${MINIO_URL}"

        # Verify MinIO is accessible
        curl -f ${MINIO_URL}/minio/health/live || (echo "MinIO health check failed" && exit 1)

        # Export for subsequent steps
        echo "MINIO_ENDPOINT=${MINIO_URL}" >> $GITHUB_ENV

    - name: Install AWS CLI
      run: |
        curl "https://awscli.amazonaws.com/awscli-exe-linux-x86_64.zip" -o "awscliv2.zip"
        unzip awscliv2.zip
        sudo ./aws/install

    - name: Configure AWS CLI for MinIO
      run: |
        aws configure set aws_access_key_id admin
        aws configure set aws_secret_access_key password
        aws configure set default.region us-east-1

        # Test MinIO connection
        aws s3 ls --endpoint-url $MINIO_ENDPOINT

    - name: Run E2E tests
      run: |
        chmod +x chart/tests/e2e/run-e2e-tests.sh
        chart/tests/e2e/run-e2e-tests.sh

    - name: Collect logs on failure
      if: failure()
      run: |
        echo "=== MinIO Logs ==="
        kubectl logs -n minio -l app=minio --tail=100

        echo "=== S3 Housekeeping Logs ==="
        kubectl logs -l app.kubernetes.io/name=s3-housekeeping --tail=100 || echo "No s3-housekeeping pods found"

        echo "=== All Pods ==="
        kubectl get pods -A

        echo "=== Events ==="
        kubectl get events --sort-by=.metadata.creationTimestamp
