name: E2E Tests

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:

jobs:
  e2e-test:
    runs-on: ubuntu-latest
    timeout-minutes: 60
    strategy:
      matrix:
        test-mode:
          - name: "Multi-Bucket"
            use_multi_bucket: true
            description: "4 buckets with individual CronJobs"
          - name: "Single-Bucket"
            use_multi_bucket: false
            description: "1 bucket for compatibility testing"
      fail-fast: false

    name: E2E Tests (${{ matrix.test-mode.name }})

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup Helm
      uses: azure/setup-helm@v4

    - name: Start minikube
      uses: medyagh/setup-minikube@latest
      with:
        driver: docker
        memory: 4096
        cpus: 2
        wait: all

    - name: Verify minikube
      run: |
        kubectl cluster-info
        kubectl get pods -A

    - name: Deploy MinIO
      run: |
        # Create namespace
        kubectl create namespace minio || true

        # Deploy MinIO using direct YAML (supports multiple buckets)
        kubectl apply -f chart/tests/e2e/minio.yaml -n minio

        # Wait for deployment to be ready
        kubectl wait --for=condition=available deployment/minio -n minio --timeout=300s

    - name: Wait for MinIO to be ready
      run: |
        kubectl wait --for=condition=ready pod -l app=minio -n minio --timeout=300s
        kubectl get pods -n minio

    - name: Run E2E tests (${{ matrix.test-mode.name }})
      run: |
        # Set test mode
        export USE_MULTI_BUCKET=${{ matrix.test-mode.use_multi_bucket }}
        export SKIP_OBJECT_LISTING=true  # Enable performance optimization for CI

        chmod +x chart/tests/e2e/run-e2e-tests.sh

        echo "ðŸš€ Running ${{ matrix.test-mode.name }} E2E Tests"
        echo "Description: ${{ matrix.test-mode.description }}"
        echo "USE_MULTI_BUCKET=${USE_MULTI_BUCKET}"
        echo ""

        chart/tests/e2e/run-e2e-tests.sh

    - name: Collect logs on failure
      if: failure()
      run: |
        echo "=== Test Configuration ==="
        echo "Test Mode: ${{ matrix.test-mode.name }}"
        echo "USE_MULTI_BUCKET: ${{ matrix.test-mode.use_multi_bucket }}"
        echo ""

        echo "=== MinIO Service ==="
        minikube service list
        minikube service minio -n minio --url || echo "MinIO service not accessible"

        echo "=== MinIO Logs ==="
        kubectl logs -n minio -l app=minio --tail=100

        echo "=== S3 Housekeeping CronJobs ==="
        kubectl get cronjobs -n s3-housekeeping-e2e -o wide || echo "No cronjobs found"

        echo "=== S3 Housekeeping Jobs ==="
        kubectl get jobs -n s3-housekeeping-e2e -o wide || echo "No jobs found"

        echo "=== S3 Housekeeping Logs ==="
        kubectl logs -n s3-housekeeping-e2e -l app.kubernetes.io/name=s3-housekeeping --tail=100 || echo "No s3-housekeeping pods found"

        echo "=== All Pods ==="
        kubectl get pods -A

        echo "=== ConfigMaps ==="
        kubectl get configmaps -n s3-housekeeping-e2e || echo "No configmaps found"

        echo "=== Events ==="
        kubectl get events --sort-by=.metadata.creationTimestamp
