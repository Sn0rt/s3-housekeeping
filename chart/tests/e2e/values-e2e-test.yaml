# E2E Test Values for S3 Housekeeping with MinIO
# This configuration tests the complete lifecycle management functionality

# Enable debug mode for detailed logging
debug: true

# Container image configuration
image:
  repository: public.ecr.aws/lambda/python
  tag: "3.11"
  pullPolicy: IfNotPresent

# S3 buckets configuration for testing
s3:
  buckets:
    # Single test bucket for initial testing
    - name: "my-bucket"
      lifecycleConfigName: "standard-lifecycle"
      endpoint: "http://minio.minio.svc.cluster.local:9000"
      accessKeyId:
        secretName: "minio-credentials"
        secretKey: "accesskey"
      secretAccessKey:
        secretName: "minio-credentials"
        secretKey: "secretkey"

# S3 lifecycle configurations for testing
s3LifecycleConfigs:
  # Simple lifecycle configuration - only expiration
  - name: "standard-lifecycle"
    content: |
      {
        "Rules": [
          {
            "ID": "TempFilesRule",
            "Status": "Enabled",
            "Filter": {
              "Prefix": "temp/"
            },
            "Expiration": {
              "Days": 7
            }
          },
          {
            "ID": "LogsRule",
            "Status": "Enabled",
            "Filter": {
              "Prefix": "logs/"
            },
            "Expiration": {
              "Days": 30
            }
          }
        ]
      }

# CronJob scheduling configuration
cronJob:
  # Run every 2 minutes for testing
  schedule: "*/2 * * * *"
  # Number of job history to retain
  successfulJobsHistoryLimit: 3
  failedJobsHistoryLimit: 1
  # Concurrency policy: Allow, Forbid, Replace
  concurrencyPolicy: Forbid
  # Job execution timeout in seconds - shorter for testing
  activeDeadlineSeconds: 300
  # Restart policy
  restartPolicy: OnFailure

# Resource limits for testing environment
resources:
  limits:
    cpu: "200m"
    memory: "128Mi"
  requests:
    cpu: "100m"
    memory: "64Mi"